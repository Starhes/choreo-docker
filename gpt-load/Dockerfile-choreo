# Stage 0: Clone the source code from GitHub
FROM alpine:latest AS cloner
RUN apk add --no-cache git
WORKDIR /source
RUN git clone --depth 1 https://github.com/tbphp/gpt-load.git .


# Stage 1: Build the frontend (Node.js app)
FROM node:20-alpine AS builder-frontend
WORKDIR /build
COPY --from=cloner /source/web .
RUN npm install
RUN VITE_VERSION=1.0.0 npm run build


# Stage 2: Build the backend (Go application)
# --- FIX: Upgraded Go version from 1.21 to 1.23 ---
FROM golang:1.23-alpine AS builder-backend
# Set build arguments and environment variables
ARG VERSION=1.0.0
ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64
WORKDIR /build
COPY --from=cloner /source/go.mod /source/go.sum ./
RUN go mod download
COPY --from=cloner /source/. .
COPY --from=builder-frontend /build/dist ./web/dist
RUN go build -ldflags "-s -w -X gpt-load/internal/version.Version=${VERSION}" -o gpt-load


# Stage 3: Final production image
FROM alpine:latest
WORKDIR /app

RUN apk upgrade --no-cache \
    && apk add --no-cache ca-certificates tzdata \
    && update-ca-certificates

# --- Choreo Specific Requirement ---
RUN addgroup -S -g 10014 choreo && \
    adduser -S -u 10014 -G choreo --no-create-home choreouser

COPY --from=builder-backend /build/gpt-load .
USER 10014
EXPOSE 3001
ENTRYPOINT ["/app/gpt-load"]
